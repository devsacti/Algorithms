# 요약
## dynamic programming with memozation 과 피보나치, 그리고 선형 디오판토스 방정식
## 시간복잡도 : O(n)

# 문제풀이 1~3단계 ; 정확한 해석 >> 알고리즘 활용 및 통합 >> 구현

## 1단계 : 정확한 문제 해석
## N,K 는 정수, 그리고 N 은 3 이상
## K 가 피보나치 규칙 관점에서 분석되야할 대상
## N 은 위와같은 규칙 상에서 K의 순서
## 조건에 부합하는 a,b 1쌍만 구하면됨.

## !! 피보나치 규칙에 근거해서 해석하자면 !!
## K 란 'p * a + q * b'로 분석가능 하고, and p, q 를 N과 관련시켜서 이해할 수 있음
## 가령 N 이 3으로 주어지면, 피보나치 규칙상 K 는 p=1, q=1  일 때 'p * a + q * b'임(즉, a+b)
## 가령 N 이 4로 주어지면, K는 p=1,q=2 일때 'p * a + q * b'임(즉, a+2b)
## 가령 N 이 5로 주어지면, K는 p=2,q=3 일때 'p * a + q * b'임(즉, 2a+3b)

## 2-1 단계 : 해석에 알고리즘을 활용
## dp table과 메모제이션을 활용하면

## index       0  1  2  3  4  5  6 ... N
## a dp table  *  1  0  1  1  2  3 ... p
## b dp table  *  0  1  1  2  3  5 ... q
## sum of p,q  *  A  B  C  D  E  F ... K

## 문제 조건과의 조화를 위해 0번째는 쓰지 않고,
## A = 1*a + 0*b
## B = 0*a + 1*b
## C = 1*a + 1*b
## D = 1*a + 2*b
## E = 2*b + 3*b
## ...
## K = p*a + q*b
## p, q는 다이너믹 프로그래밍과 메모제이션을 통해 상수로서 도출가능

## 만약 p,q가 5,8일때, K = 5*a + 8*b
## 이를 충족하는 정수해 a,b를 구하는 것은 디오판토스(or 디오판틴) 방정식 문제이다
## (혼란을 피하기 위해 미지수를 통일하자면, p * a + q * b = c)

## 그리고, 이 방정식의 일반해는 특수해를 기반으로 정의되는데,
## 가령 x=x0+ (q/d) * t, y=y0+ (p/d) * t ; x0,y0는 방정식의 특수해, d is gcd of p,q
## 이 특수해를 구하는 과정은 유클리드 호제법을 역순으로 적용하는 과정이다.
## 따라서 브루트포스하게 '정수 a,b'를 구하면 리턴하고 종료

## 2-2 단계 : 통합 및 시간복잡도 계산
## part 1
## N 번째까지 플러스 연산하면 되서 시간복잡도는 O(n)

## part 2
## 그 다음이나, 독립적으로 디오판토스 방정식의 시간복잡도는 O(n)
## 그러나 gcd가 1 인경우, 일반적인 방법으로 해결되지 않고, 확장법 또한 현재로썬 발견하지 못했다
## 그리하여 이 경우에 대해서 'a,b가 모두 양수인 경우에 한정하고' 이렇게 되면 시간복잡도는 O(k/p)이다. pa+qb=K의 절편이다.

## O(n)+O(n) >> O(n)

## 한편, dp table은 recursive하게도 구현가능하나, 시간복잡도가 급증하므로 차선
## 그리고 피보나치 수열에 대한 특성방정식 조건도 활용가능은 하나, 무리수가 포함되서 근사값이라 오차 발생하므로 차선
